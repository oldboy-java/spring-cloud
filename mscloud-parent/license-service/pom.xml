<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.tk</groupId>
        <artifactId>mscloud-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

  <artifactId>licenseservice</artifactId>

  <dependencies>
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

      <!-- 健康检查-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>


      <!-- mybatis -->
      <dependency>
          <groupId>org.mybatis.spring.boot</groupId>
          <artifactId>mybatis-spring-boot-starter</artifactId>
      </dependency>


      <!-- druid连接池-->
      <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>druid-spring-boot-starter</artifactId>
      </dependency>

      <!-- mysql-->
      <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
      </dependency>

      <!--mybatis-plus -->
      <dependency>
          <groupId>com.baomidou</groupId>
          <artifactId>mybatis-plus-boot-starter</artifactId>
      </dependency>


      <!-- 使用eureka-client发现服务 -->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      </dependency>


      <!-- Feign -->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-openfeign</artifactId>
      </dependency>

      <!-- 服务发现 -->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-config</artifactId>
      </dependency>

      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-config-client</artifactId>
      </dependency>

      <!-- hystrix-->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
      </dependency>

      <!-- spring-security -->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-security</artifactId>
      </dependency>


      <!--spring-security-oauth2 -->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-oauth2</artifactId>
      </dependency>


      <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-rsa</artifactId>
      </dependency>

      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
      </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <start-class>com.thoughtmechanix.licenses.LicenseApplication</start-class>
<!--    <docker.image.name>johncarnell/tmx-licensing-service</docker.image.name>-->
<!--    <docker.image.tag>chapter7</docker.image.tag>-->
  </properties>

<!--  <build>-->
<!--     <plugins>-->
<!--         &lt;!&ndash; We use the Resources plugin to filer Dockerfile and run.sh, it inserts actual JAR filename &ndash;&gt;-->
<!--         &lt;!&ndash; The final Dockerfile will be created in target/dockerfile/Dockerfile &ndash;&gt;-->
<!--         <plugin>-->
<!--             <artifactId>maven-resources-plugin</artifactId>-->
<!--             <executions>-->
<!--                 <execution>-->
<!--                     <id>copy-resources</id>-->
<!--                     &lt;!&ndash; here the phase you need &ndash;&gt;-->
<!--                     <phase>validate</phase>-->
<!--                     <goals>-->
<!--                         <goal>copy-resources</goal>-->
<!--                     </goals>-->
<!--                     <configuration>-->
<!--                         <outputDirectory>${basedir}/target/dockerfile</outputDirectory>-->
<!--                         <resources>-->
<!--                             <resource>-->
<!--                                 <directory>src/main/docker</directory>-->
<!--                                 <filtering>true</filtering>-->
<!--                             </resource>-->
<!--                         </resources>-->
<!--                     </configuration>-->
<!--                 </execution>-->
<!--             </executions>-->
<!--         </plugin>-->
<!--         <plugin>-->
<!--             <groupId>com.spotify</groupId>-->
<!--             <artifactId>docker-maven-plugin</artifactId>-->
<!--             <version>0.4.10</version>-->
<!--             <configuration>-->
<!--                 <imageName>${docker.image.name}:${docker.image.tag}</imageName>-->
<!--                 <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>-->
<!--                 <resources>-->
<!--                     <resource>-->
<!--                         <targetPath>/</targetPath>-->
<!--                         <directory>${project.build.directory}</directory>-->
<!--                         <include>${project.build.finalName}.jar</include>-->
<!--                     </resource>-->
<!--                 </resources>-->
<!--             </configuration>-->
<!--         </plugin>-->
<!--         <plugin>-->
<!--             <groupId>org.springframework.boot</groupId>-->
<!--             <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--         </plugin>-->
<!--     </plugins>-->
<!-- </build>-->

</project>
